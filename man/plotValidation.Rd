% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hyperparameterValidation.R
\name{plotValidation}
\alias{plotValidation}
\title{Plot the hyperparameter validation data}
\usage{
plotValidation(ValidationData, x.axis = NULL, y.axis = NULL,
  plot.line = TRUE, local.optima = FALSE, facet = NULL,
  pretty.names = TRUE, title = NULL)
}
\arguments{
\item{ValidationData}{\code{ValidationData}\cr}

\item{x.axis}{\code{character(1)}\cr
Specify what should be plotted on the x axis. Must be a column from
\code{ValidationData$data}}

\item{y.axis}{\code{character(1)}\cr
Specify what should be plotted on the y axis. Must be a column from
\code{ValidationData$data}}

\item{plot.line}{\code{logical(1)}\cr
If TRUE, will connect plotted points with a line}

\item{local.optima}{\code{logical(1)}\cr
If TRUE, will color found local optima points green}

\item{facet}{\code{character(1)}\cr
TODO: not yet implemented}

\item{pretty.names}{\code{logical(1)}\cr
Whether to use the \code{\link{Measure}} name instead of the id in the plot}

\item{title}{\code{character(1)}\cr
A custom title for the returned plot}
}
\value{
ggplot2 plot object
}
\description{
Plot hyperparameter validation path. Automated plotting method for 
\code{ValidationData} object. Useful for determining the importance
or effect of a particular hyperparameter on some performance measure and/or
optimizer.
}
\examples{
ps = makeParamSet(makeDiscreteParam("C", values = 2^(-4:4)))
ctrl = makeTuneControlRandom()
rdesc = makeResampleDesc("CV", iters = 3L)
res = tuneParams("classif.ksvm", task = pid.task, resampling = rdesc,
par.set = ps, control = ctrl, measures = acc)
valid = generateValidationData(res)
plotValidation(valid, x.axis = "C", y.axis = "acc.test.mean")
}

